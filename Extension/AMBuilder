# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os

# Name of your extesion, this will also be it's file name.
projectName = 'SteamWorks'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'extension.cpp',
  'swgameserver.cpp',
  'swgamedata.cpp',
  'swforwards.cpp',
  'gsnatives.cpp',
  'swgshooks.cpp',
  'swgsdetours.cpp',
  'ssnatives.cpp',
  'gcnatives.cpp',
  'swhttp.cpp',
  'swhttprequest.cpp',
  'swgchooks.cpp',
  os.path.join('sdk', 'smsdk_ext.cpp'),
]

project = builder.LibraryProject(projectName)

if os.path.isfile(os.path.join(builder.currentSourcePath, 'sdk', 'smsdk_ext.cpp')):
  # Use the copy included in the project
  project.sources += [os.path.join('sdk', 'smsdk_ext.cpp')]
else:
  # Use the copy included with SM 1.6 and newer
  project.sources += [os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp')]

project.sources += sourceFiles

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]
  if sdk['name'] in ['mock']:
    continue

  for cxx in builder.targets:
    if not cxx.target.arch in sdk['platforms'][cxx.target.platform]:
      continue

    binary = Extension.HL2ExtConfig(project, builder, cxx, projectName + '.ext.' + sdk['extension'], sdk)
    Extension.AddCDetour(binary)

    binary.compiler.defines += ['META_NO_HL2SDK', 'SOURCEMOD_BUILD', 'VERSION_SAFE_STEAM_API_INTERFACES']
    binary.compiler.cxxincludes += [
        os.path.join(Extension.swsdk_root, 'public', 'steam'),
        os.path.join(sdk['path'], 'public', 'steam')
    ]

    if binary.compiler.target.platform == 'linux':
      binary.compiler.postlink += [
          os.path.join(Extension.swsdk_root, 'redistributable_bin', 'linux32','libsteam_api.so')
      ]
    elif binary.compiler.target.platform == 'windows':
      binary.compiler.postlink += [
          os.path.join(Extension.swsdk_root, 'redistributable_bin', 'steam_api.lib'),
      ]
    elif binary.compiler.target.platform == 'mac':
      binary.compiler.postlink += [
          os.path.join(Extension.swsdk_root, 'redistributable_bin', 'osx', 'libsteam_api.dylib'),
      ]

Extension.extensions += builder.Add(project)
