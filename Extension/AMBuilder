# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os

project = builder.LibraryProject('SteamWorks')
project.sources += [
  'extension.cpp',
  'swgameserver.cpp',
  'swgamedata.cpp',
  'swforwards.cpp',
  'gsnatives.cpp',
  'swgshooks.cpp',
  'swgsdetours.cpp',
  'ssnatives.cpp',
  'gcnatives.cpp',
  'swhttp.cpp',
  'swhttprequest.cpp',
  'swgchooks.cpp',
  os.path.join('sdk', 'smsdk_ext.cpp'),
  os.path.join(Extension.sm_root, 'public', 'CDetour', 'detours.cpp'),
  os.path.join(Extension.sm_root, 'public', 'asm', 'asm.c'),
]
# sm1.10+
libudis_folder = os.path.join(Extension.sm_root, 'public', 'libudis86')
if os.path.isdir(libudis_folder):
    project.sources += [
        os.path.join(libudis_folder, 'decode.c'),
        os.path.join(libudis_folder, 'itab.c'),
        os.path.join(libudis_folder, 'syn-att.c'),
        os.path.join(libudis_folder, 'syn-intel.c'),
        os.path.join(libudis_folder, 'syn.c'),
        os.path.join(libudis_folder, 'udis86.c'),
    ]

for sdk_name in Extension.sdks:
    sdk = Extension.sdks[sdk_name]

    for cxx in builder.targets:
        if not cxx.target.arch in sdk.platformSpec[cxx.target.platform]:
            continue

        binary = Extension.HL2ExtConfig(project, builder, cxx, 'SteamWorks.ext.' + sdk.ext, sdk)

        binary.compiler.defines += ['META_NO_HL2SDK', 'SOURCEMOD_BUILD', 'VERSION_SAFE_STEAM_API_INTERFACES']
        binary.compiler.cxxincludes += [
            os.path.join(Extension.swsdk_root, 'public', 'steam'),
            os.path.join(sdk.path, 'public', 'steam')
        ]

        if binary.compiler.target.platform == 'linux':
            binary.compiler.postlink += [
                os.path.join(Extension.swsdk_root, 'redistributable_bin', 'linux32','libsteam_api.so')
            ]

        if binary.compiler.target.platform == 'windows':
            binary.compiler.postlink += [
                os.path.join(Extension.swsdk_root, 'redistributable_bin', 'steam_api.lib'),
            ]

        if binary.compiler.target.platform == 'mac':
            binary.compiler.postlink += [
                os.path.join(Extension.swsdk_root, 'redistributable_bin', 'osx', 'libsteam_api.dylib'),
            ]

Extension.extensions += builder.Add(project)
