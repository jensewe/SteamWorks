# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags:
    - 'v*'
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: build with sm${{ matrix.sm_version }} on ${{ matrix.os_short }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        sm_version:
          - "1.6"
          # - "1.10"

        mm_version:
          - "1.10"

        include:
          - mm_version: "1.10"
            mm_branch: "1.10-dev"

          # - sm_version: "1.10"
          #   sm_branch: "1.10-dev"

          - sm_version: "1.6"
            sm_branch: "1.6-dev"

          - os: ubuntu-latest
            os_short: linux

          - os: windows-latest
            os_short: win

    steps:
      - name: Prepare env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Add msbuild to PATH (Windows)
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          :: See https://github.com/microsoft/vswhere/wiki/Find-VC
          for /f "usebackq delims=*" %%i in (`vswhere -latest -property installationPath`) do (
            call "%%i"\Common7\Tools\vsdevcmd.bat -arch=x86 -host_arch=x64
          )

          :: Loop over all environment variables and make them global.
          for /f "delims== tokens=1,2" %%a in ('set') do (
            echo>>"%GITHUB_ENV%" %%a=%%b
          )

      - name: Checking out SourceMod
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/sourcemod
          ref: ${{ matrix.sm_branch }}
          path: sourcemod-${{ matrix.sm_version }}
          submodules: recursive

      - name: Checking out MM:Source
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/metamod-source
          ref: ${{ matrix.mm_branch }}
          path: metamod-${{ matrix.mm_version }}

      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Getting ambuild
        run: |
          python -m pip install wheel
          pip install git+https://github.com/alliedmodders/ambuild

      - name: Checking out hl2sdk-l4d2
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/hl2sdk
          ref: l4d2
          path: hl2sdk-l4d2

      - name: Getting Steam Works
        uses: actions/checkout@v3
        with:
         repository: 'spumer/SteamworksSDK'
         ref: 'v1.56'
         path: 'steamworks-sdk'
         token: ${{ secrets.STEAMWORKS_REPO_ACCESS_TOKEN }}

      - name: Checking out own repository
        uses: actions/checkout@v3
        with:
          path: steamworks

      - name: Run Build
        shell: bash
        working-directory: ./steamworks
        run: |
          mkdir build
          cd build
          python ../configure.py \
          --enable-optimize \
          --hl2sdk-root=$GITHUB_WORKSPACE \
          --mms-path=$GITHUB_WORKSPACE/metamod-${{ matrix.mm_version }} \
          --sm-path=$GITHUB_WORKSPACE/sourcemod-${{ matrix.sm_version }} \
          --swsdk-path=$GITHUB_WORKSPACE/steamworks-sdk/sdk
          ambuild

      - name: Uploading package
        uses: actions/upload-artifact@v2
        with:
          name: steamworks-sm${{ matrix.sm_version }}-${{ matrix.os_short }}-${{ env.GITHUB_SHA_SHORT }}
          path: steamworks/build/package
